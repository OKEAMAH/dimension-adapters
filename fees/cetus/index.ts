import { Adapter, FetchResultV2, FetchV2 } from '../../adapters/types';
import { CHAIN } from '../../helpers/chains';
import fetchURL from '../../utils/fetchURL';

const cetusApiURL = 'https://api-sui.cetus.zone/v2/sui/daily-fees';

interface CetusStats {
  data:{
    fee: string;
    protocolFee: string;
  }
}

const methodology = {
  Fees: 'Swap fees generated by the swap transactions on Cetus Protocol.',
  ProtocolRevenue: 'Protocol fees charged from the swap fees.',
};

const fetchCetusStats: FetchV2 = async ({
  startTimestamp,
  endTimestamp,
}): Promise<FetchResultV2> => {
  const url = `${cetusApiURL}?fromTimestamp=${startTimestamp}&toTimestamp=${endTimestamp}`;
  const { data }: CetusStats = await fetchURL(url);
  const dailyFees = data.fee;
  const dailyRevenue = data.protocolFee;
  return {
    dailyFees: dailyFees,
    dailyRevenue: dailyRevenue,
    dailyProtocolRevenue: dailyRevenue,
  };
};

const adapter: Adapter = {
  version: 2,
  adapter: {
    [CHAIN.SUI]: {
      runAtCurrTime: false,
      customBackfill: undefined,
      fetch: fetchCetusStats,
      start: 1704067200,
      meta: {
        methodology,
      },
    },
  },
};

export default adapter;
